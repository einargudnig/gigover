name: Firebase Functions CI

on:
  push:
    branches: [main, develop]
    paths: ['functions/**']
  pull_request:
    branches: [main, develop]
    paths: ['functions/**']

env:
  NODE_VERSION: '18'

jobs:
  test-and-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: functions/functions/package-lock.json

      - name: Install dependencies
        run: |
          cd functions/functions
          npm ci

      - name: TypeScript compile check
        run: |
          cd functions/functions
          npx tsc --noEmit

      - name: Build functions
        run: |
          cd functions/functions
          npm run build

      - name: Run unit tests (if available)
        run: |
          cd functions/functions
          if [ -f "package.json" ] && grep -q '"test"' package.json; then
            npm test
          else
            echo "No tests found, skipping..."
          fi

      - name: Upload build artifacts
        if: github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v4
        with:
          name: functions-build
          path: functions/functions/lib/
          retention-days: 30

  deploy-staging:
    runs-on: ubuntu-latest
    needs: test-and-build
    if: github.event_name == 'pull_request'
    environment: staging
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: functions/functions/package-lock.json

      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      - name: Install dependencies
        run: |
          cd functions/functions
          npm ci

      - name: Build functions
        run: |
          cd functions/functions
          npm run build

      - name: Deploy to Firebase Functions (Staging)
        run: |
          cd functions
          firebase use ${{ secrets.FIREBASE_PROJECT_ID_STAGING }}
          firebase deploy --only functions --token ${{ secrets.FIREBASE_TOKEN }}
        env:
          FIREBASE_PROJECT: ${{ secrets.FIREBASE_PROJECT_ID_STAGING }}

  deploy-production:
    runs-on: ubuntu-latest
    needs: test-and-build
    if: github.ref == 'refs/heads/main'
    environment: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: functions/functions/package-lock.json

      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      - name: Install dependencies
        run: |
          cd functions/functions
          npm ci

      - name: Build functions
        run: |
          cd functions/functions
          npm run build

      - name: Deploy to Firebase Functions (Production)
        run: |
          cd functions
          firebase use ${{ secrets.FIREBASE_PROJECT_ID_PRODUCTION }}
          firebase deploy --only functions --token ${{ secrets.FIREBASE_TOKEN }}
        env:
          FIREBASE_PROJECT: ${{ secrets.FIREBASE_PROJECT_ID_PRODUCTION }}

  security-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: functions/functions/package-lock.json

      - name: Install dependencies
        run: |
          cd functions/functions
          npm ci

      - name: Run npm audit
        run: |
          cd functions/functions
          npm audit --audit-level=moderate

      - name: Check for known vulnerabilities
        run: |
          cd functions/functions
          npx audit-ci --moderate