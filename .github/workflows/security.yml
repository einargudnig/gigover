name: Security & Quality Checks

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  schedule:
    # Run weekly security scans on Sundays at 2 AM UTC
    - cron: '0 2 * * 0'

jobs:
  dependency-check:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        project: [
          { name: 'web', path: 'web' },
          { name: 'new-frontend', path: 'new-frontend' },
          { name: 'frontend', path: 'frontend' },
          { name: 'functions', path: 'functions/functions' }
        ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: ${{ matrix.project.path }}/package-lock.json

      - name: Install dependencies
        run: |
          cd ${{ matrix.project.path }}
          npm ci

      - name: Run npm audit
        run: |
          cd ${{ matrix.project.path }}
          npm audit --audit-level=moderate || true

      - name: Check for outdated packages
        run: |
          cd ${{ matrix.project.path }}
          npm outdated || true

      - name: Run license check
        run: |
          cd ${{ matrix.project.path }}
          npx license-checker --onlyAllow 'MIT;Apache-2.0;BSD-2-Clause;BSD-3-Clause;ISC;CC0-1.0;Unlicense' || true

  codeql-analysis:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    strategy:
      fail-fast: false
      matrix:
        language: ['javascript', 'typescript']
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
          queries: security-extended,security-and-quality

      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:${{matrix.language}}"

  flutter-security:
    runs-on: ubuntu-latest
    if: github.event_name != 'schedule'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.13.0'
          cache: true

      - name: Get dependencies
        run: |
          cd app
          flutter pub get

      - name: Run Flutter security analysis
        run: |
          cd app
          flutter analyze --fatal-infos

      - name: Check for Flutter vulnerabilities
        run: |
          cd app
          flutter pub deps --json | jq -r '.packages[] | select(.source == "hosted") | "\(.name)@\(.version)"' > flutter_deps.txt
          echo "Flutter dependencies saved for manual review"

  secret-scan:
    runs-on: ubuntu-latest
    if: github.event_name != 'schedule'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run secret scanning with truffleHog
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: main
          head: HEAD
          extra_args: --debug --only-verified

  code-quality:
    runs-on: ubuntu-latest
    if: github.event_name != 'schedule'
    strategy:
      matrix:
        project: [
          { name: 'web', path: 'web', hasLint: true },
          { name: 'new-frontend', path: 'new-frontend', hasLint: true },
          { name: 'frontend', path: 'frontend', hasLint: false },
          { name: 'functions', path: 'functions/functions', hasLint: false }
        ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: ${{ matrix.project.path }}/package-lock.json

      - name: Install dependencies
        run: |
          cd ${{ matrix.project.path }}
          npm ci

      - name: Run ESLint
        if: matrix.project.hasLint
        run: |
          cd ${{ matrix.project.path }}
          npm run lint

      - name: Check TypeScript compilation
        run: |
          cd ${{ matrix.project.path }}
          npx tsc --noEmit

      - name: Check code formatting (Prettier)
        run: |
          cd ${{ matrix.project.path }}
          npx prettier --check . || true

  performance-budget:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    strategy:
      matrix:
        project: [
          { name: 'web', path: 'web' },
          { name: 'new-frontend', path: 'new-frontend' }
        ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: ${{ matrix.project.path }}/package-lock.json

      - name: Install dependencies
        run: |
          cd ${{ matrix.project.path }}
          npm ci

      - name: Build project
        run: |
          cd ${{ matrix.project.path }}
          npm run build

      - name: Check bundle size
        run: |
          cd ${{ matrix.project.path }}
          npx bundlesize
        continue-on-error: true

  security-report:
    runs-on: ubuntu-latest
    needs: [dependency-check, codeql-analysis, secret-scan]
    if: always() && github.event_name == 'schedule'
    steps:
      - name: Generate security report
        run: |
          echo "## Weekly Security Report" > security-report.md
          echo "Date: $(date)" >> security-report.md
          echo "" >> security-report.md
          echo "### Summary" >> security-report.md
          echo "- Dependency Check: ${{ needs.dependency-check.result }}" >> security-report.md
          echo "- CodeQL Analysis: ${{ needs.codeql-analysis.result }}" >> security-report.md
          echo "- Secret Scan: ${{ needs.secret-scan.result }}" >> security-report.md

      - name: Upload security report
        uses: actions/upload-artifact@v4
        with:
          name: security-report
          path: security-report.md
          retention-days: 90